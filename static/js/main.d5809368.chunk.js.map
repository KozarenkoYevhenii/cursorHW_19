{"version":3,"sources":["homepage/homepage.js","Navbar/navbar.js","Photos/photos.js","Post/post.js","Posts/posts.js","Contact/Contact.js","Contacts/Contacts.js","App.js","serviceWorker.js","index.js"],"names":["Homepage","className","Navbar","to","photosArray","Photos","map","photo","src","alt","Post","props","name","nickname","date","content","image","postArray","authorImage","authorName","authorNickname","postImage","postContent","postDate","Posts","state","post","React","Component","Contact","contact","firstName","lastName","gender","phone","CONTACTS","Contacts","contacts","filteredContacts","search","handleSearchChange","e","currentInput","target","value","setState","filter","toLocaleLowerCase","includes","type","this","onChange","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d5809368.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./homepage.css\"\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <div className=\"homepage-wrapper\">\r\n            Welcome <br />\r\n            May the Force be with you!\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./navbar.css\"\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n        <NavLink className=\"navbar-item\" to=\"homepage\">Homepage</NavLink>    \r\n        <NavLink className=\"navbar-item\" to=\"posts\">Posts</NavLink>\r\n        <NavLink className=\"navbar-item\" to=\"photos\">Photos</NavLink>\r\n        <NavLink className=\"navbar-item\" to=\"contacts\">Contacts</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./photos.css\"\r\n\r\nconst photosArray = [\"https://static.posters.cz/image/750/%D0%9F%D0%BB%D0%B0%D0%BA%D0%B0%D1%82/star-wars-episode-1-the-phantom-menace-i47371.jpg\",\r\n    \"https://images.fineartamerica.com/images/artworkimages/mediumlarge/2/vintage-retro-poster-star-wars-episode-ii-geek-n-rock.jpg\",\r\n    \"https://images-na.ssl-images-amazon.com/images/I/61ZDSUH2iiL._AC_SY879_.jpg\",\r\n    \"https://imgc.allpostersimages.com/img/print/posters/star-wars-episode-iv-new-hope-classic-movie-poster_a-G-9385455-0.jpg?w=632&h=950\",\r\n    \"https://static.posters.cz/image/750/%D0%9F%D0%BB%D0%B0%D0%BA%D0%B0%D1%82/star-wars-episode-v-the-empire-strikes-back-i90219.jpg\",\r\n\"https://images-na.ssl-images-amazon.com/images/I/61-hofd7dsL._AC_SY741_.jpg\",\r\n];\r\n\r\nconst Photos = () => {\r\n    return (\r\n        <div className=\"photo-wrapper\">\r\n            {photosArray.map((photo) => <img src={photo} className=\"photo-item\" alt=\"star wars poster\" />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Photos;","import React from \"react\";\r\nimport \"./post.css\"\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div className=\"postWrapper\">\r\n          <img className=\"authorImage\" src={props.photo} alt='author' />\r\n      <div className=\"authorInfo\">\r\n        <span className=\"authorName\">{props.name}</span>\r\n        <span className=\"authorNickname\">{props.nickname}</span>\r\n        <span className=\"date\">{props.date}</span>\r\n      </div>\r\n      <div className=\"contentText\">{props.content}</div>\r\n      <img className=\"contentImage\" src={props.image} alt='content' />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"../Post/post\";\r\nimport \"./posts.css\";\r\n\r\nconst postArray = [\r\n  {\r\n    authorImage:\r\n      \"https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg\",\r\n    authorName: \"Anakin Skywalker\",\r\n    authorNickname: \"@dart_vader\",\r\n    postImage:\r\n      \"https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale\",\r\n    postContent: \"WTF? Who is Ray? Why she is Skywalker? Luke...?\",\r\n    postDate: \"26 Feb.\",\r\n  },\r\n  {\r\n    authorImage:\r\n      \"https://imagesvc.meredithcorp.io/v3/mm/image?q=85&c=sc&poi=face&w=2000&h=1047&url=https%3A%2F%2Fstatic.onecms.io%2Fwp-content%2Fuploads%2Fsites%2F6%2F2017%2F03%2Fstar-wars-a-new-hope-2000.jpg\",\r\n    authorName: \"Luke Skywalker\",\r\n    authorNickname: \"@last_jedi\",\r\n    postImage:\r\n      \"https://gamespot1.cbsistatic.com/uploads/screen_kubrick/1557/15576725/3587617-rey.jpg\",\r\n    postContent: \"Congrats! You are grandpa))\",\r\n    postDate: \"27 Feb.\",\r\n  },\r\n  {\r\n    authorImage:\r\n      \"https://www.denofgeek.com/wp-content/uploads/2020/05/star-wars-rey.jpg?fit=1536%2C864\",\r\n    authorName: \"Ray Skywalker\",\r\n    authorNickname: \"@rogue\",\r\n    postImage:\r\n      \"https://specials-images.forbesimg.com/imageserve/5e01fac525ab5d0007cf2ed3/960x0.jpg?fit=scale\",\r\n    postContent: \"Whaaaaat?\",\r\n    postDate: \"28 Feb.\",\r\n  },\r\n];\r\n\r\nclass Posts extends React.Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"posts-wrapper\">\r\n        {postArray.map((post) => {\r\n          return (\r\n            <Post\r\n              name={post.authorName}\r\n              photo={post.authorImage}\r\n              nickname={post.authorNickname}\r\n              content={post.postContent}\r\n              image={post.postImage}\r\n              date={post.postDate}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport \"./Contact.css\";\r\n\r\nconst Contact = ({ contact }) => {\r\n  return (\r\n    <div className=\"contact-card\">\r\n      <div className=\"contact\">\r\n      <span className=\"contact-name\">{contact.firstName} {contact.lastName} </span>\r\n        <span className=\"gender\">{contact.gender && contact.gender}</span>\r\n      </div>\r\n      <span className=\"contact-number\">{contact.phone}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport \"./Contacts.css\";\r\n\r\nconst CONTACTS = [\r\n  {\r\n    firstName: \"Барней\",\r\n    lastName: \"Стинсовський\",\r\n    phone: \"+380956319521\",\r\n    gender: \"male\",\r\n  },\r\n  {\r\n    firstName: \"Робін\",\r\n    lastName: \"Щербатська\",\r\n    phone: \"+380931460123\",\r\n    gender: \"female\",\r\n  },\r\n  {\r\n    firstName: \"Анонімний\",\r\n    lastName: \"Анонімус\",\r\n    phone: \"+380666666666\",\r\n  },\r\n  {\r\n    firstName: \"Лілія\",\r\n    lastName: \"Олдровна\",\r\n    phone: \"+380504691254\",\r\n    gender: \"female\",\r\n  },\r\n  {\r\n    firstName: \"Маршен\",\r\n    lastName: \"Еріксонян\",\r\n    phone: \"+380739432123\",\r\n    gender: \"male\",\r\n  },\r\n  {\r\n    firstName: \"Теодор\",\r\n    lastName: \"Мотсбес\",\r\n    phone: \"+380956319521\",\r\n    gender: \"male\",\r\n  },\r\n];\r\n\r\nclass Contacts extends Component {\r\n  state = {\r\n    contacts: [...CONTACTS],\r\n    filteredContacts: [...CONTACTS],\r\n    search: \"\",\r\n  };\r\n  handleSearchChange = (e) => {\r\n    const currentInput = e.target.value;\r\n    this.setState({\r\n      search: currentInput,\r\n      filteredContacts: this.state.contacts.filter((contact) =>\r\n        contact.lastName\r\n          .toLocaleLowerCase()\r\n          .includes(currentInput.toLocaleLowerCase()) || contact.firstName\r\n          .toLocaleLowerCase()\r\n          .includes(currentInput.toLocaleLowerCase())\r\n      ),\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"search\">\r\n          <label>\r\n            Search:{\" \"}\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              value={this.state.search}\r\n              onChange={this.handleSearchChange}\r\n            ></input>\r\n          </label>\r\n        </div>\r\n        <div>\r\n          {this.state.filteredContacts.map((contact) => (\r\n            <Contact contact={contact} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Homepage from \"./homepage/homepage\";\nimport Navbar from \"./Navbar/navbar\";\nimport Photos from \"./Photos/photos\";\nimport Posts from \"./Posts/posts\";\nimport Contacts from \"./Contacts/Contacts\"\n\nfunction App() {\n  return (\n    <div className=\"app-wrapper\">\n      <Navbar />\n      <div className=\"content-window\">\n        <Redirect exact path=\"/\" to=\"/homepage\" />\n        <Route path=\"/homepage\" component={Homepage} />\n        <Route path=\"/posts\" component={Posts} />\n        <Route path=\"/photos\" component={Photos} />\n        <Route path=\"/contacts\" component={Contacts} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}